<section id="hero" class="min-h-screen flex items-center justify-center text-center p-6 pt-20 md:pt-6 relative overflow-hidden">
    <div id="hero-video-background" class="absolute top-0 left-0 w-full h-full z-0">
        <video id="hero-video-1" class="hero-video active" loop playsinline muted preload="auto" autoplay>
            <source src="/assets/videos/hero-video-1.mp4" type="video/mp4">
            –í–∞—à –±—Ä–∞—É–∑–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤–∏–¥–µ–æ HTML5.
        </video>
        <div class="video-overlay absolute top-0 left-0 w-full h-full"></div>
    </div>

    <div class="hero-text relative z-10">
        <h1 class="text-7xl sm:text-8xl md:text-9xl lg:text-[10rem] font-extrabold mb-4">
            <span class="gradient-text">–í–∞–ª–µ—Ä–∏–π –ë–µ–ª—å—Å–∫–∏–π</span>
        </h1>
        <p class="text-xl sm:text-2xl md:text-3xl mb-2">–í–µ–¥—É—â–∏–π –∏ —Ä—ç–ø-–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∏–∑ –ê–ª–º–∞—Ç—ã</p>
        <div id="typing-subtitle-container" class="text-lg sm:text-xl md:text-2xl mb-8 min-h-14 md:min-h-8 flex items-center justify-center">
            <span id="typing-subtitle" class="font-semibold text-cyan-400 typing-effect"></span>
        </div>
        <a href="https://wa.me/77079292980?text=–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ%2C%20–í–∞–ª–µ—Ä–∏–π!%20–•–æ—Ç–µ–ª%20–±—ã%20–æ–±—Å—É–¥–∏—Ç—å%20–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é%20–º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è." target="_blank" rel="noopener noreferrer" id="heroCtaButton" class="btn-primary text-xl md:text-2xl font-semibold py-4 md:py-5 px-10 md:px-12 rounded-lg inline-block transition-all duration-300 ease-out">–ó–∞–∫–∞–∑–∞—Ç—å –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ</a>
    </div>
</section>

<script>
  // –°–∫—Ä–∏–ø—Ç –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –µ–≥–æ –º–æ–∂–Ω–æ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å
  document.addEventListener('DOMContentLoaded', () => {
    const subtitleElement = document.getElementById('typing-subtitle')!;
    if (!subtitleElement) {
      return; 
    }
    const subtitles = [
      '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤—ã —Å AI',
      '–ö–∞–≤–µ—Ä—ã –Ω–∞ Eminem',
      '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏'
    ];
    let subtitleIndex = 0;
    let charIndex = 0;
    let isDeleting = false;
    function type() {
      const currentSubtitle = subtitles[subtitleIndex];
      if (isDeleting) {
        subtitleElement.textContent = currentSubtitle.substring(0, charIndex - 1);
        charIndex--;
      } else {
        subtitleElement.textContent = currentSubtitle.substring(0, charIndex + 1);
        charIndex++;
      }
      if (!isDeleting && charIndex === currentSubtitle.length) {
        isDeleting = true;
        setTimeout(type, 2000);
      } else if (isDeleting && charIndex === 0) {
        isDeleting = false;
        subtitleIndex = (subtitleIndex + 1) % subtitles.length;
        setTimeout(type, 500);
      } else {
        setTimeout(type, isDeleting ? 75 : 150);
      }
    }
    type();
  });
</script>

<style>
  #hero-video-background {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
  z-index: 0;
}
.hero-video {
  position: absolute;
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  transform: translateX(-50%) translateY(-50%);
  object-fit: cover;
  opacity: 1;
}
.video-overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1;
}
.hero-text {
  position: relative;
  z-index: 2;
}

/* üëá –í–û–¢ –ó–î–ï–°–¨ –ò–ó–ú–ï–ù–ï–ù–ò–Ø –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–´–• –≠–ö–†–ê–ù–û–í üëá */
@media (max-width: 768px) {
  .hero-text h1 {
    font-size: 3.5rem; /* –†–∞–Ω—å—à–µ –±—ã–ª–æ 2.25rem */
  }
  .hero-text p {
    font-size: 1rem;
  }
  .typing-effect {
    white-space: normal;
    border-right: none;
    animation: none;
  }
}
</style>